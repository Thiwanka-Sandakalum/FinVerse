# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy Product Service API to Azure Web App

on:
  push:
    branches:
      - main
    paths:
      - 'apps/backend/banking-service-api/**'
      - 'packages/**'
      - '.github/workflows/main_product-service.yml'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read #This is required for actions/checkout

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          cache: 'npm'

      - name: Install dependencies
        working-directory: ./apps/backend/banking-service-api
        run: |
          npm ci

      - name: Build product service
        working-directory: ./apps/backend/banking-service-api
        run: |
          npm run build

      - name: Generate Prisma client
        working-directory: ./apps/backend/banking-service-api
        run: |
          npx prisma generate

      - name: Prepare deployment package
        run: |
          mkdir -p deployment-package
          
          # Copy built application
          cp -r apps/backend/banking-service-api/dist deployment-package/
          
          # Copy package.json and modify it for production
          cp apps/backend/banking-service-api/package.json deployment-package/
          
          # Copy prisma folder completely
          cp -r apps/backend/banking-service-api/prisma deployment-package/
          
          # Copy startup script
          cp apps/backend/banking-service-api/startup.sh deployment-package/ || echo "Startup script not found"
          
          # Create a simplified package.json for production
          node -e "
          const fs = require('fs');
          const pkg = JSON.parse(fs.readFileSync('deployment-package/package.json', 'utf8'));
          
          // Keep only production dependencies and essential scripts
          const prodPkg = {
            name: pkg.name,
            version: pkg.version,
            main: 'dist/index.js',
            scripts: {
              start: 'node dist/index.js',
              'prisma:generate': 'prisma generate',
              'postinstall': 'prisma generate'
            },
            dependencies: pkg.dependencies || {},
            prisma: pkg.prisma || {},
            engines: pkg.engines || { node: '>=18' }
          };
          
          fs.writeFileSync('deployment-package/package.json', JSON.stringify(prodPkg, null, 2));
          console.log('Production package.json created');
          "
          
          echo 'Deployment package contents:'
          find deployment-package -type f -name '*.js' -o -name '*.json' -o -name '*.prisma' | head -20
          
          echo 'Package size:'
          du -sh deployment-package/
          
          echo 'Verifying main entry point:'
          ls -la deployment-package/dist/index.js || echo "WARNING: Main entry point not found!"
          
          echo 'Verifying package.json:'
          cat deployment-package/package.json

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: product-service-app
          path: deployment-package/

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write #This is required for requesting the JWT
      contents: read #This is required for actions/checkout

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: product-service-app
      
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_0F81A70B06C64AB48AD11ACD2DC8807C }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_8FD0810621FF4AB9AC3655FEB45A0369 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_8D680F54F62646C693BF58A892D6BC6B }}

      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'product-service'
          slot-name: 'Production'
          package: .
          startup-command: 'npm install && npx prisma generate && npx prisma db push && npm start'
          