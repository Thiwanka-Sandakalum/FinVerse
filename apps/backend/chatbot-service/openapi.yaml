openapi: 3.0.3
info:
  title: FinVerse Chatbot API
  description: |
    FinVerse Chatbot API provides intelligent financial advisory services through AI-powered chat capabilities.
    The API supports general financial queries, product-specific conversations, product comparisons, and chat history management.

    ## Features
    - AI-powered financial advisory chat
    - Product-specific conversations
    - Financial product comparisons
    - Chat history management
    - User authentication support
    - Vector-based and SQL-based query processing

  version: 1.0.0
  contact:
    name: FinVerse Team
    email: support@finverse.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: https://{environment}.choreoapis.dev/finverse-chatbot/v1
    description: Choreo Environment
    variables:
      environment:
        default: sandbox
        enum:
          - sandbox
          - dev
          - prod
  - url: http://localhost:8085
    description: Local Development

security:
  - BearerAuth: []
  - {}

paths:
  /:
    get:
      tags:
        - Static
      summary: Serve main application page
      description: Returns the main HTML interface for the chatbot
      responses:
        "200":
          description: HTML page
          content:
            text/html:
              schema:
                type: string

  /chat:
    post:
      tags:
        - Chat
      summary: Process general financial queries
      description: |
        Process general financial queries using AI-powered chat capabilities.
        Supports various query types including SQL-based product searches and vector-based semantic queries.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChatRequest"
            examples:
              general_query:
                summary: General financial advice
                value:
                  query: "What are the best savings accounts available?"
                  include_history: true
              specific_query:
                summary: Query with conversation context
                value:
                  query: "Tell me more about the interest rates"
                  conversation_id: "conv_123"
                  include_history: true
      responses:
        "200":
          description: Chat response with answer and sources
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChatResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /product-chat:
    post:
      tags:
        - Product Chat
      summary: Chat about a specific financial product
      description: |
        Process queries about a specific financial product identified by its ID.
        All responses are contextualized to the specific product.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductChatRequest"
            examples:
              product_query:
                summary: Product-specific question
                value:
                  query: "What are the interest rates for this account?"
                  product_id: "prod_123"
                  include_history: true
      responses:
        "200":
          description: Product-specific chat response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChatResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Product not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /compare-products:
    post:
      tags:
        - Product Comparison
      summary: Compare multiple financial products
      description: |
        Compare multiple financial products by their IDs.
        Returns a structured comparison highlighting differences across key attributes.
        Requires at least 2 product IDs.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductComparisonRequest"
            examples:
              comparison_request:
                summary: Compare two savings accounts
                value:
                  product_ids: ["prod_123", "prod_456"]
                  conversation_id: "conv_123"
      responses:
        "200":
          description: Product comparison response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductComparisonResponse"
        "400":
          description: Bad request (less than 2 products provided)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /ingest:
    post:
      tags:
        - Data Management
      summary: Ingest product data into vector store
      description: |
        Ingest all financial product data from the database into the vector store for semantic search capabilities.
        This endpoint is typically used for data initialization and updates.
      security:
        - BearerAuth: []
      responses:
        "200":
          description: Data ingestion successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IngestResponse"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /products/{product_id}:
    get:
      tags:
        - Products
      summary: Get product by ID
      description: Retrieve detailed information about a specific financial product
      parameters:
        - name: product_id
          in: path
          required: true
          description: Unique identifier for the financial product
          schema:
            type: string
          example: "prod_123"
      responses:
        "200":
          description: Product details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        "404":
          description: Product not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /products/type/{type_name}:
    get:
      tags:
        - Products
      summary: Get products by type
      description: Retrieve all products of a specific type (e.g., savings, credit_cards, loans)
      parameters:
        - name: type_name
          in: path
          required: true
          description: Type of financial product
          schema:
            type: string
          example: "savings"
      responses:
        "200":
          description: List of products of the specified type
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Product"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /institutions:
    get:
      tags:
        - Institutions
      summary: Get all financial institutions
      description: Retrieve a list of all financial institutions in the system
      responses:
        "200":
          description: List of financial institutions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Institution"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /stats:
    get:
      tags:
        - Analytics
      summary: Get query statistics
      description: Retrieve statistics about processed queries and system usage
      responses:
        "200":
          description: Query statistics
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StatsResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /conversations:
    get:
      tags:
        - Chat History
      summary: Get user conversations
      description: Retrieve a list of chat conversations for the current user
      parameters:
        - name: limit
          in: query
          description: Maximum number of conversations to return
          schema:
            type: integer
            default: 100
            minimum: 1
            maximum: 1000
      responses:
        "200":
          description: List of user conversations
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConversationsResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /conversations/{conversation_id}/history:
    get:
      tags:
        - Chat History
      summary: Get conversation history
      description: Retrieve message history for a specific conversation
      parameters:
        - name: conversation_id
          in: path
          required: true
          description: Unique identifier for the conversation
          schema:
            type: string
          example: "conv_123"
        - name: limit
          in: query
          description: Maximum number of messages to return
          schema:
            type: integer
            default: 20
            minimum: 1
            maximum: 100
      responses:
        "200":
          description: Conversation message history
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConversationHistoryResponse"
        "404":
          description: Conversation not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /conversations/{conversation_id}:
    delete:
      tags:
        - Chat History
      summary: Delete conversation
      description: Delete a conversation and all its messages
      parameters:
        - name: conversation_id
          in: path
          required: true
          description: Unique identifier for the conversation
          schema:
            type: string
          example: "conv_123"
      responses:
        "200":
          description: Conversation deleted successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
        "404":
          description: Conversation not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /conversations/cleanup:
    post:
      tags:
        - Chat History
      summary: Cleanup old conversations
      description: Delete conversations older than specified number of days
      parameters:
        - name: days
          in: query
          description: Number of days to keep conversations (older ones will be deleted)
          schema:
            type: integer
            default: 30
            minimum: 1
      responses:
        "200":
          description: Cleanup completed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CleanupResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /auth/me:
    get:
      tags:
        - Authentication
      summary: Get current user information
      description: |
        Get information about the currently authenticated user.
        Requires a valid JWT token in the Authorization header.
      security:
        - BearerAuth: []
      responses:
        "200":
          description: Current user information
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserResponse"
        "401":
          description: Unauthorized - Invalid or missing token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT token for user authentication

  schemas:
    ChatRequest:
      type: object
      required:
        - query
      properties:
        query:
          type: string
          description: The user's financial query or question
          example: "What are the best credit cards for travel?"
        conversation_id:
          type: string
          nullable: true
          description: Optional conversation ID to maintain chat context
          example: "conv_123"
        include_history:
          type: boolean
          default: true
          description: Whether to include conversation history in the response
          example: true

    ProductChatRequest:
      type: object
      required:
        - query
        - product_id
      properties:
        query:
          type: string
          description: The user's question about the specific product
          example: "What are the fees associated with this account?"
        product_id:
          type: string
          description: Unique identifier for the financial product
          example: "prod_123"
        conversation_id:
          type: string
          nullable: true
          description: Optional conversation ID to maintain chat context
          example: "conv_123"
        include_history:
          type: boolean
          default: true
          description: Whether to include conversation history in the response
          example: true

    ProductComparisonRequest:
      type: object
      required:
        - product_ids
      properties:
        product_ids:
          type: array
          items:
            type: string
          minItems: 2
          description: List of product IDs to compare (minimum 2 required)
          example: ["prod_123", "prod_456", "prod_789"]
        conversation_id:
          type: string
          nullable: true
          description: Optional conversation ID to maintain chat context
          example: "conv_123"

    Message:
      type: object
      required:
        - text
        - role
      properties:
        text:
          type: string
          description: Message content
          example: "What are the best savings accounts?"
        role:
          type: string
          enum: [user, assistant]
          description: Role of the message sender
          example: "user"
        timestamp:
          type: string
          nullable: true
          description: ISO 8601 timestamp of the message
          example: "2024-01-15T10:30:00Z"

    Source:
      type: object
      required:
        - text
      properties:
        text:
          type: string
          description: Source text content
          example: "This savings account offers a 2.5% APY with no minimum balance requirement."
        product_id:
          type: string
          nullable: true
          description: Associated product ID if applicable
          example: "prod_123"
        product_name:
          type: string
          nullable: true
          description: Associated product name if applicable
          example: "Premium Savings Account"
        relevance:
          type: number
          nullable: true
          description: Relevance score (0-1)
          example: 0.85

    ChatResponse:
      type: object
      required:
        - answer
        - sources
        - conversation_id
      properties:
        answer:
          type: string
          description: AI-generated response to the user's query
          example: "Based on current market conditions, here are the top savings accounts..."
        sources:
          type: array
          items:
            $ref: "#/components/schemas/Source"
          description: Source information used to generate the response
        conversation_id:
          type: string
          description: Conversation identifier for this chat session
          example: "conv_123"
        query_type:
          type: string
          nullable: true
          enum: [sql, vector, hybrid, unsupported, product_specific]
          description: Type of query processing used
          example: "vector"
        history:
          type: array
          items:
            $ref: "#/components/schemas/Message"
          nullable: true
          description: Recent conversation history if requested

    ProductComparisonResponse:
      type: object
      required:
        - summary
        - comparison
        - products
        - conversation_id
      properties:
        summary:
          type: string
          description: AI-generated summary of the product comparison
          example: "Comparing these three savings accounts shows varying interest rates and fee structures..."
        comparison:
          type: object
          additionalProperties: true
          description: Detailed comparison data structure
        products:
          type: array
          items:
            $ref: "#/components/schemas/Product"
          description: List of compared products with their details
        conversation_id:
          type: string
          description: Conversation identifier
          example: "conv_123"

    IngestResponse:
      type: object
      required:
        - status
        - message
        - ingested_count
      properties:
        status:
          type: string
          enum: [success, error]
          description: Status of the ingestion operation
          example: "success"
        message:
          type: string
          description: Descriptive message about the operation
          example: "Successfully ingested products into vector store"
        ingested_count:
          type: integer
          description: Number of products successfully ingested
          example: 150

    Product:
      type: object
      properties:
        id:
          type: string
          description: Unique product identifier
          example: "prod_123"
        name:
          type: string
          description: Product name
          example: "Premium Savings Account"
        type:
          type: string
          description: Product type
          example: "savings"
        institution_id:
          type: string
          description: Associated financial institution ID
          example: "inst_456"
        institution_name:
          type: string
          description: Associated financial institution name
          example: "Example Bank"
        description:
          type: string
          description: Product description
          example: "High-yield savings account with competitive rates"
        features:
          type: object
          additionalProperties: true
          description: Product-specific features and attributes
        created_at:
          type: string
          format: date-time
          description: Product creation timestamp
        updated_at:
          type: string
          format: date-time
          description: Last update timestamp

    Institution:
      type: object
      properties:
        id:
          type: string
          description: Unique institution identifier
          example: "inst_456"
        name:
          type: string
          description: Institution name
          example: "Example Bank"
        type:
          type: string
          description: Institution type
          example: "bank"
        description:
          type: string
          description: Institution description

    StatsResponse:
      type: object
      properties:
        status:
          type: string
          enum: [success]
          example: "success"
        stats:
          type: object
          properties:
            total_queries:
              type: integer
              example: 1250
            query_types:
              type: object
              additionalProperties:
                type: integer
              example:
                vector: 800
                sql: 350
                hybrid: 100
            avg_response_time:
              type: number
              example: 1.5

    ConversationsResponse:
      type: object
      properties:
        status:
          type: string
          enum: [success]
          example: "success"
        conversations:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                example: "conv_123"
              created_at:
                type: string
                format: date-time
              last_message:
                type: string
              message_count:
                type: integer

    ConversationHistoryResponse:
      type: object
      properties:
        status:
          type: string
          enum: [success]
          example: "success"
        conversation_id:
          type: string
          example: "conv_123"
        messages:
          type: array
          items:
            $ref: "#/components/schemas/Message"

    CleanupResponse:
      type: object
      properties:
        status:
          type: string
          enum: [success]
          example: "success"
        message:
          type: string
          example: "Deleted 25 old conversations"
        deleted_count:
          type: integer
          example: 25

    UserResponse:
      type: object
      properties:
        status:
          type: string
          enum: [success]
          example: "success"
        user_id:
          type: string
          description: Unique user identifier
          example: "user_789"
        is_authenticated:
          type: boolean
          description: Authentication status
          example: true

    SuccessResponse:
      type: object
      properties:
        status:
          type: string
          enum: [success]
          example: "success"
        message:
          type: string
          example: "Operation completed successfully"

    ErrorResponse:
      type: object
      properties:
        detail:
          type: string
          description: Error message
          example: "Product not found"

tags:
  - name: Static
    description: Static file serving
  - name: Chat
    description: General financial advisory chat operations
  - name: Product Chat
    description: Product-specific chat operations
  - name: Product Comparison
    description: Financial product comparison operations
  - name: Products
    description: Financial product information operations
  - name: Institutions
    description: Financial institution operations
  - name: Data Management
    description: Data ingestion and management operations
  - name: Chat History
    description: Conversation and chat history management
  - name: Analytics
    description: System analytics and statistics
  - name: Authentication
    description: User authentication and authorization
