openapi: 3.0.3
info:
  title: FinVerse Interaction Service API
  description: |
    API for tracking user interactions with FinVerse products and services.
    This service enables behavior tracking and analytics to generate personalized suggestions for users.
  version: 1.0.0
  contact:
    name: FinVerse Support
    email: support@finverse.example.com

servers:
  - url: http://localhost:4002
    description: Local development server
  - url: https://api.finverse.example.com/interaction
    description: Production server

tags:
  - name: Interactions
    description: General user interaction tracking endpoints
  - name: Product Views
    description: Track and analyze product view events
  - name: Comparisons
    description: Track and analyze product comparison events
  - name: Searches
    description: Track and analyze search events
  - name: Analytics
    description: Endpoints for retrieving analytics data
  - name: Health
    description: Service health monitoring

paths:
  /health:
    get:
      summary: Check service health
      description: Returns the current health status of the service
      operationId: healthCheck
      tags:
        - Health
      responses:
        "200":
          description: Service is healthy
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HealthResponse"
        "500":
          description: Service is unhealthy
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HealthResponse"

  /api/v1/interactions:
    post:
      summary: Track a general interaction
      description: Records a generic user interaction with the system
      operationId: trackInteraction
      tags:
        - Interactions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InteractionEvent"
      responses:
        "200":
          description: Interaction tracked successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
        "400":
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"

  /api/v1/product-views:
    post:
      summary: Track a product view
      description: Records when a user views a specific product
      operationId: trackProductView
      tags:
        - Product Views
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductViewEvent"
      responses:
        "200":
          description: Product view tracked successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
        "400":
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"

  /api/v1/comparisons:
    post:
      summary: Track a product comparison
      description: Records when a user compares multiple products
      operationId: trackComparison
      tags:
        - Comparisons
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ComparisonEvent"
      responses:
        "200":
          description: Comparison tracked successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
        "400":
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"

  /api/v1/searches:
    post:
      summary: Track a search event
      description: Records when a user performs a search
      operationId: trackSearch
      tags:
        - Searches
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchEvent"
      responses:
        "200":
          description: Search tracked successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
        "400":
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"

  /api/v1/interactions/user/{userId}:
    get:
      summary: Get user interactions
      description: Retrieves all interactions for a specific user
      operationId: getUserInteractions
      tags:
        - Analytics
      parameters:
        - name: userId
          in: path
          description: ID of the user
          required: true
          schema:
            type: string
        - name: limit
          in: query
          description: Maximum number of records to return
          required: false
          schema:
            type: integer
            default: 20
        - name: skip
          in: query
          description: Number of records to skip for pagination
          required: false
          schema:
            type: integer
            default: 0
      responses:
        "200":
          description: User interactions retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InteractionsResponse"
        "400":
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
        "404":
          description: User not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"

  /api/v1/interactions/session/{sessionId}:
    get:
      summary: Get session interactions
      description: Retrieves all interactions for a specific session
      operationId: getSessionInteractions
      tags:
        - Analytics
      parameters:
        - name: sessionId
          in: path
          description: ID of the session
          required: true
          schema:
            type: string
        - name: limit
          in: query
          description: Maximum number of records to return
          required: false
          schema:
            type: integer
            default: 20
        - name: skip
          in: query
          description: Number of records to skip for pagination
          required: false
          schema:
            type: integer
            default: 0
      responses:
        "200":
          description: Session interactions retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InteractionsResponse"
        "400":
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
        "404":
          description: Session not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"

  /api/v1/interactions/product/{productId}:
    get:
      summary: Get product interactions
      description: Retrieves all interactions for a specific product
      operationId: getProductInteractions
      tags:
        - Analytics
      parameters:
        - name: productId
          in: path
          description: ID of the product
          required: true
          schema:
            type: string
        - name: limit
          in: query
          description: Maximum number of records to return
          required: false
          schema:
            type: integer
            default: 20
        - name: skip
          in: query
          description: Number of records to skip for pagination
          required: false
          schema:
            type: integer
            default: 0
      responses:
        "200":
          description: Product interactions retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InteractionsResponse"
        "400":
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
        "404":
          description: Product not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"

  /api/v1/product-views/most-viewed:
    get:
      summary: Get most viewed products
      description: Retrieves the most viewed products with view counts
      operationId: getMostViewedProducts
      tags:
        - Analytics
        - Product Views
      parameters:
        - name: limit
          in: query
          description: Maximum number of products to return
          required: false
          schema:
            type: integer
            default: 10
      responses:
        "200":
          description: Most viewed products retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MostViewedProductsResponse"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"

  /api/v1/interactions/stats:
    get:
      summary: Get interaction statistics
      description: Retrieves statistics about tracked interactions
      operationId: getInteractionStats
      tags:
        - Analytics
      responses:
        "200":
          description: Interaction statistics retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InteractionStatsResponse"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"

components:
  schemas:
    InteractionEvent:
      type: object
      properties:
        userId:
          type: string
          description: ID of the user (if authenticated)
        productId:
          type: string
          description: ID of the product being interacted with (if applicable)
        action:
          type: string
          enum:
            [
              viewed,
              compared,
              applied,
              saved,
              shared,
              filtered,
              searched,
              clicked,
              expanded,
              collapsed,
              scrolled,
            ]
          description: Type of interaction
        sessionId:
          type: string
          description: ID of the session (for anonymous tracking)
        source:
          type: string
          description: Source of the interaction (e.g., webpage, mobile app)
        data:
          type: object
          additionalProperties: true
          description: Additional data related to the interaction
      required:
        - action

    ProductViewEvent:
      type: object
      properties:
        userId:
          type: string
          description: ID of the user (if authenticated)
        productId:
          type: string
          description: ID of the product being viewed
        viewDuration:
          type: integer
          description: Duration of the view in seconds
        sessionId:
          type: string
          description: ID of the session (for anonymous tracking)
        source:
          type: string
          description: Source of the view (e.g., search results, recommendation)
        viewedFeatures:
          type: array
          items:
            type: string
          description: Specific features of the product that were viewed
      required:
        - productId

    ComparisonEvent:
      type: object
      properties:
        userId:
          type: string
          description: ID of the user (if authenticated)
        productIds:
          type: array
          items:
            type: string
          description: IDs of the products being compared
        sessionId:
          type: string
          description: ID of the session (for anonymous tracking)
        comparisonDuration:
          type: integer
          description: Duration of the comparison in seconds
      required:
        - productIds

    SearchEvent:
      type: object
      properties:
        userId:
          type: string
          description: ID of the user (if authenticated)
        query:
          type: string
          description: Search query text
        filters:
          type: object
          additionalProperties: true
          description: Filters applied to the search
        resultCount:
          type: integer
          description: Number of results returned
        selectedProduct:
          type: string
          description: ID of product selected from search results, if any
        sessionId:
          type: string
          description: ID of the session (for anonymous tracking)
      required:
        - query

    UserPreference:
      type: object
      properties:
        userId:
          type: string
          description: ID of the user
        preferences:
          type: object
          additionalProperties: true
          description: User preferences data
        inferredInterests:
          type: object
          additionalProperties: true
          description: Interests inferred from user behavior
      required:
        - userId
        - preferences

    ApplicationIntent:
      type: object
      properties:
        userId:
          type: string
          description: ID of the user
        productId:
          type: string
          description: ID of the product
        completed:
          type: boolean
          description: Whether the application was completed
        abandonedAt:
          type: string
          format: date-time
          description: When the application was abandoned (if applicable)
        source:
          type: string
          description: Source of the application intent
      required:
        - userId
        - productId

    Event:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the event
        type:
          type: string
          enum: [interaction, product_view, comparison, search]
          description: Type of event
        timestamp:
          type: string
          format: date-time
          description: When the event occurred
        userId:
          type: string
          description: ID of the user (if authenticated)
        sessionId:
          type: string
          description: ID of the session (for anonymous tracking)
        data:
          type: object
          additionalProperties: true
          description: Event-specific data

    Response:
      type: object
      properties:
        success:
          type: boolean
          description: Whether the request was successful
        message:
          type: string
          description: Message describing the result
        error:
          type: string
          description: Error message (if any)
      required:
        - success

    InteractionsResponse:
      type: object
      properties:
        success:
          type: boolean
          description: Whether the request was successful
        data:
          type: array
          items:
            $ref: "#/components/schemas/Event"
          description: List of interaction events
        error:
          type: string
          description: Error message (if any)
      required:
        - success

    MostViewedProductsResponse:
      type: object
      properties:
        success:
          type: boolean
          description: Whether the request was successful
        data:
          type: array
          items:
            type: object
            properties:
              productId:
                type: string
                description: ID of the product
              viewCount:
                type: integer
                description: Number of views
              lastViewed:
                type: string
                format: date-time
                description: When the product was last viewed
          description: List of most viewed products
        error:
          type: string
          description: Error message (if any)
      required:
        - success

    InteractionStatsResponse:
      type: object
      properties:
        success:
          type: boolean
          description: Whether the request was successful
        data:
          type: object
          properties:
            totalInteractions:
              type: integer
              description: Total number of interactions
            totalProductViews:
              type: integer
              description: Total number of product views
            totalComparisons:
              type: integer
              description: Total number of comparisons
            totalSearches:
              type: integer
              description: Total number of searches
            uniqueUsers:
              type: integer
              description: Number of unique users
            uniqueSessions:
              type: integer
              description: Number of unique sessions
            activeUsersPast24h:
              type: integer
              description: Number of active users in the past 24 hours
            topActions:
              type: array
              items:
                type: object
                properties:
                  action:
                    type: string
                    description: Action type
                  count:
                    type: integer
                    description: Number of occurrences
              description: Most frequent actions
        error:
          type: string
          description: Error message (if any)
      required:
        - success

    HealthResponse:
      type: object
      properties:
        status:
          type: string
          description: Health status (OK or ERROR)
        timestamp:
          type: string
          format: date-time
          description: Current server time
        version:
          type: string
          description: Service version
      required:
        - status
        - timestamp

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT token authentication

security:
  - BearerAuth: []
